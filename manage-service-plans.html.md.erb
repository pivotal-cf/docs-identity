---
title: Managing Service Plans
owner: Identity Service
---

This topic describes how Pivotal Cloud Foundry (PCF) Administrators manage Single Sign-On service plans.

Single Sign-On (SSO) is a multi-tenant service, which enables a deployment to host multiple tenants as service plans. 
Each service plan can have its own administrators, applications and users. 
This lets enterprises segregate access by using separate plans. For example, the following tenants might require separate plans:

* Business units and geographical locations

* Employees, consumers, and partners

* Development, staging, and production instances

You may also want to configure an SSO Service Plan as an OpenID Connect (OIDC) identity provider. 
For more information, see [Plan-to-Plan OIDC Integration Guide](./plan-to-plan/index.html).

## <a id='create-svc-plan'></a> Create or Edit Service Plans

Administrators can create new SSO service plans at any time from the SSO dashboard.
You can use the SSO dashboard to create and configure service plans at any time.

<p class="note"><strong>Note</strong>: You must create at least one plan for any service before your applications can use it.</p>

1. Log into the SSO dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` 
using your User Account and Authentication (UAA) administrator credentials. 
You can find these credentials in the Pivotal Application Service (PAS) tile in Ops Manager in the **Credentials** tab.

1. Click **New Plan** on the SSO dashboard to create a new SSO service plan.

	<%= image_tag 'images/managing_create_plan.png' %>

1. Enter a **Plan Name**.

1. Enter a **Description** to appear as a plan feature in the Services Marketplace.

1. Enter an **Auth Domain** to be the URL where users authenticate to access applications covered by the service plan.

1. Enter an **Instance Name** to appear on the login page and in other user-facing content, such as email communications.

1. Add **Plan Administrators**. These users can view the plan and manage identity providers.

1. Under **Organizations**, select specific organizations in your PCF deployment 
that can access your Single Sign-On service plan, or select **Enable for all Orgs**. <br><br>
	* If you select **Enable for all Orgs** the plan is available for use and displayed in the Services Marketplace for all developers in any organization. 
	This is only recommended for test plans to allow developers to experiment with the SSO service.<br><br>
	* If you do not select any organizations, the plan is not available for use and it is not displayed in the Services Marketplace.

1. Click **Create Plan**. Your new plan appears in the Services Marketplace in the organizations you selected. 
Users in those organizations view the plan either in Apps Manager or through the CF CLI by entering `cf marketplace` in a terminal window.

## <a id='delete-svc-plan'></a> Delete Service Plans

<p class='note'><strong>Note</strong>: This action cannot be undone. Deleting a Single Sign-On service plan 
removes from the SSO database all of the configurations, identity providers, users, 
application configurations and resources associated with the plan. 
It also deletes the associated service instances and service bindings. 
You must rebind any applications bound to the deleted service instances to new service instances.</p>

1. Log in to the SSO dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` 
using your UAA administrator credentials. You can find these credentials in your 
Pivotal Elastic Runtime tile in Ops Manager under the Credentials tab.

2. Select the name of the plan you want to delete, and click **Edit Plan** in the drop-down menu.

3. Select **Delete** at the bottom of the page.

4. In the popup that appears, click **Delete Plan** to confirm that you want to delete the plan.


## <a id='configure-token-policy'></a> Configure a Token Policy

The Single Sign-On service allows administrators to override the 
default expiry of access tokens (12 hours) and refresh tokens (30 days) by zone.

* **Access tokens** carry information about users and clients to servers that manage resources. 
Servers use access tokens to determine whether the client is authorized or not. Access tokens typically have a short-lived expiration time. 
* **Refresh tokens** carry information necessary to retrieve a new access token after an existing access token expires. 
Refresh tokens typically have a longer expiration time than access tokens.

To configure the token policy, do the following:

1. Log in to the SSO dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA administrator credentials. 
You can find these credentials in your Pivotal Application Service (PAS) tile in Ops Manager in the **Credentials** tab.

2. Select the name of the plan you want to configure a token policy for, and click **Configure** from the drop-down menu.

3. Enter the number of seconds for **Access Token Expiration** or select **Use System Default**.

4. Enter the number of seconds for **Refresh Token Expiration** or select **Use System Default**.

5. Click **Save**.

## <a id='plan-automation'></a> Automate Service Plan Creation and Deletion

PCF administrators can create new SSO service plans using the SSO API. This 
allows them to automate creating, updating, and deleting SSO plans. Below are instructions on how to automate plan creation.

In order to use the following steps, you will need to have the same credentials used for [Creating and Managing Users with the UAA CLI (UAAC) for PCF](https://docs.pivotal.io/pivotalcf/uaa/uaa-user-management.html). We recommend creating a dedicated client for SSO plan automation.

1. To install the UAA CLI, run the following command:
    
	```
  gem install cf-uaac
  ```
		
1. To target your PCF UAA server, run the following command: 

    ```
    $ uaac target uaa.YOUR-SYSTEM-DOMAIN
    ```
		
	Where `YOUR-SYSTEM-DOMAIN` is your PCF system domain URL.
1. To record your admin credentials, do one of the following:
	+ Obtain **Admin Client Credentials** from OpsManager
	+ Obtain **uaa:admin:client_secret** from your deployment manifest. UAAC stores the token in `~/.uaac.yml`.
					
1. To authenticate and obtain an access token for the admin client from the UAA server, 
run the following command: 

	```
	uaac token client get admin -s ADMIN-CLIENT-SECRET
	```
	
	Where `ADMIN-CLIENT-SECRET` is the admin credentials you recorded in the previous step. 

1. To create an automation client with UAAC, run the following command:  

	```
        uaac client add CLIENT-ID --secret CLIENT-SECRET --authorized_grant_type client_credentials --authorities "cloud_controller.admin,zones.write,scim.write,scim.read"
	```

	Where: 
	+ `CLIENT-ID` is the name of the client you wish to use for SSO plan automation.
	+ `CLIENT-SECRET` is the secret used to authenticate the client you wish to use for SSO plan 
	automation.

1. To obtain an acesss token as your automation client, run the following command:

	```
	uaac token client get CLIENT-ID -s CLIENT-SECRET
	```
	
	Where: 
	+ `CLIENT-ID` is the name you provided in the previous step.
	+ `CLIENT-SECRET` is the secret you provided in the previous step.
	
1. To confirm you are logged in as your automation client, run the following command and record the value returned under `access_token`:

	```
	uaac context  # returns the access token
	```

1. To create a new SSO plan, run the following command:

	```
	curl -X POST "https://sso-api.YOUR-SYSTEM-DOMAIN/v1/plans" \
	  -H "Authorization: Bearer $TOKEN" \
	  -H "Content-Type: application/json" \
	  -d '{
	    "name": "some-plan-name",
	    "description": "some-description",
	    "auth_domain": "some-auth-domain",
	    "instance_name": "some-instance-name"
	  }'
	```

	Where: 
	+ `YOUR-SYSTEM-DOMAIN` is your PCF system domain URL.
	+ `$TOKEN` is replaced with the access token from the previous step.
	+ The `name` field contains the name of the plan.
	+ The `description` field contains text that appears as a plan feature in the Services Marketplace.
	+ The `auth_domain` field contains the subdomain of the URL where users authenticate to access applications covered by the service plan under the `login.YOUR-SYSTEM-DOMAIN` URL.
	+ The `instance_name` field contains text that appears on the login page and in other user-facing content, such as email communications.
	+ Note that we use `curl` instead of `uaac curl` in our example to facilitate parsing the response for ID in the next step.
	
1. To save the plan ID in an environment variable for later use, you can parse the response from the previous command. The example below wraps the previous command and parses the response uses `jq`.

	```
	PLAN-ID=$(curl -X POST "https://sso-api.YOUR-SYSTEM-DOMAIN/v1/plans" ... | jq -r '.id')
	```
	Where:
	+ `YOUR-SYSTEM-DOMAIN` is your PCF system domain URL.
	+ `PLAN-ID` is the ID of the SSO plan created.

1. To add plan administrators who can manage the plan and its identity providers, see [Managing Plan Administrators for SSO Plans](https://pivotal.github.io/sso-api-docs/#managing-plan-administrators-for-sso-plans). You should already be authenticated to the UAA CLI as your automation client based on the previous steps. You can add individual plan administrators by running the following example command for each plan administrator:

	```
	uaac member add zones.PLAN-ID.admin USER-NAME  # run once for each user you wish to add as a plan admin
	```
	Where: 
	+ `PLAN-ID` is replaced with the ID returned in the previous step.
	+ `USER-NAME` is replaced with the username of the person you wish to add as a plan administrator.
	+ If `zones.PLAN-ID.admin` does not exist, you can create the group by calling `uaac group add zones.PLAN-ID.admin`.

1. To make the SSO plan available to developers in their org's CF Marketplace to add the corresponding Orgs for the plan, see
[Managing CloudFoundry Organizations](https://pivotal.github.io/sso-api-docs/#managing-cloudfoundry-organizations-for-sso-plans). You can authenticate as your automation client and add per the example below:

	```
	cf api api.YOUR-SYSTEM-DOMAIN
	cf auth CLIENT-ID CLIENT-SECRET --client-credentials
	cf enable-service-access p-identity -p PLAN-AUTH-DOMAIN -o ORG-NAME # run once for each org you wish the SSO plan to be available for via the Services Marketplace
	```
	Where: 
	+ `YOUR-SYSTEM-DOMAIN` is your PCF system domain URL.
	+ `CLIENT-ID` is the name you provided in the previous steps.
	+ `CLIENT-SECRET` is the secret you provided in the previous steps.
	+ `PLAN-AUTH-DOMAIN` is the `auth_domain` value you provided when creating the SSO plan in the previous steps.
	+ `ORG-NAME` is the name of the Org you wish to make the SSO plan visibility. If you wish to enable the SSO plan across all orgs, refer to the API docs for more details.
 
 <!-- The Managing Plan Administrators for SSO Plans link is not the same as Creating New System Operators topic (one is CLI which is automable, other is UI only which cannot be automated)
 The Managing CloudFoundry Organizations link is not a procedure, clarified procedure above -->
 
 
For more information on how you can manage SSO plans via API, see [SSO API](https://pivotal.github.io/sso-api-docs) documentation.
