---
title: Integrating Single Sign&#8209;On with Your App
owner: Identity Service
---

This topic describes how to integrate <%= vars.product_full %> with Java and non-Java apps.

## <a id="app-integration"></a>Integrate <%= vars.product_short %> with an App

Because <%= vars.product_short %> is based on the OAuth protocol, any app that uses <%= vars.product_short %> must be OAuth-aware.

### <a id="app-integration-java"></a>Java Apps

If you are using Java, use the [java-cfenv-boot-pivotal-sso](https://github.com/pivotal-cf/java-cfenv/tree/master/java-cfenv-boot-pivotal-sso) library.
For example Spring Boot apps that show how to use <%= vars.product_short %> service libraries to
configure an app for OAuth, see the `spring-boot-2.3` branch of the
[<%= vars.product_short %> Service Sample Applications](https://github.com/pivotal-cf/identity-sample-apps)
repository in GitHub.

<p class="note">
  <strong>Note:</strong> These examples use Spring Boot v2.3 and are only provided to get you started.
  VMware recommends that you use a supported version of Spring Boot.
</p>

After binding the app to a <%= vars.product_short %> service instance,
you must restart the app for the new <%= vars.product_short %> configuration to take effect.

### <a id="app-integration-nonjava"></a>Non-Java Apps

To configure non-Java apps for OAuth, supply the following properties as environment
variables to your app after you bind the app to a <%= vars.product_short %> service instance.
You can view this information on the **Next Steps** page of the <%= vars.developer_dash %>.

* **App ID**, also known as OAuth Client ID
* **App Secret**, also known as OAuth Client Secret
* **OAuth Authorization URL**, the endpoint for client authorization
* **OAuth Token URL**, the endpoint for token retrieval

To validate the token, you must verify the following:

1. The token is a properly signed JSON Web Token with an appropriate public key.
   The key can be downloaded from the **Token Verification Key** endpoint specified on the **Next Steps** page.

2. The value of `aud` in the token matches your **App ID**.

3. The value of `iss` uses the following pattern:

    ```
    https://AUTH-DOMAIN.uaa.SYSTEM-DOMAIN/oauth/token
    ```
    Where `AUTH-DOMAIN` is the **Auth Domain** you entered in [Create or Edit Service Plans](./manage-service-plans.html#create-svc-plan).

4. The expiry time of the token, `exp`, has not passed.

### <a id="login-hint"></a>Login Hints

When you make an authorization code, password or implicit grant request,
a login hint can be provided so that the end user is automatically redirected to the appropriate identity provider.

An encoded JSON string containing `origin_key` tied to the origin key of an
identity provider can be provided as a login hint using `login_hint` in a query
parameter.
For information about login hints,
see the [Authorization Code Grant](http://docs.cloudfoundry.org/api/uaa/version/4.24.0/index.html#authorization-code-grant)
in the UAA API documentation.
