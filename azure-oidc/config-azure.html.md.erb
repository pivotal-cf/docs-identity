---
title: Configuring Azure Active Directory as an OIDC Identity Provider
owner: Identity Service
---

This topic describes how to integrate Azure Active Directory (Azure AD) as an identity provider for
a <%= vars.product_full %> plan, by configuring OpenID Connect (OIDC) in both
<%= vars.product_short %> and Azure AD.


## <a id="overview"></a> Overview

Azure Active Directory (Azure AD) is Microsoft’s multi-tenant cloud-based directory and identity
management service.
It is one of several identity providers you can use in a <%= vars.product_short %> service plan.

To set up the integration:

1. [Set up a Relying Party in Azure AD](#create-azure-rp)
1. [Locate the Appropriate OIDC Metadata](#locate-azure-metadata)
1. [Set up the OIDC Identity Provider in <%= vars.product_short %>](#configure-idp)


## <a id="prereqs"></a> Prerequisites

Before you can set up a relying party in Azure AD, you must:

* Meet the prerequisites listed in the [Azure Active Directory OIDC Integration Guide Overview](./index.html).
* [Create a Service Plan in <%= vars.product_short %>](../manage-service-plans.html#create-svc-plan).
This is required to have the values for `AUTH-DOMAIN` and `ORIGIN-KEY` that are used to construct the **Redirect URI**
necessary for the Azure Relying Party configuration.


## <a id="create-azure-rp"></a> Set Up a Relying Party in Azure AD

Here are some helpful Azure guides that can assist with any questions.
Note that Azure functionality, UI, and documentation can change frequently.
The text and screenshots below are included for reference only.
If there is a discrepancy or issue in the guidance below, raise an issue on GitHub
using the link at the bottom of the page.

+ [OAuth 2.0 and OpenID Connect protocols on Microsoft identity platform](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols)
+ [Quickstart: Register an application with the Microsoft identity platform](https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app)

<p class="note">
   <strong>Note</strong>: Azure Active Directory v1 and v2 have slightly different integration instructions.
   This guide is written for v2. Notes such as this one will call out when v1 is different than v2.
</p>

Follow the procedures below to set up a relying party in Azure AD:

1. [Register a New App](#register-an-app)
1. [Generate a Relying Party OAuth Client Secret](#generate-secret)
1. [Configure Redirect URIs](#configure-urls)

### <a id="register-an-app"></a> Register a New App

To register a new app:

1. Log in to your Azure account and navigate to **Azure Active Directory** &gt; **App registrations**.

1. Select **+ New registration** to create a **New application registration**.

    <%= image_tag('../images/azure-oidc-v2-Register-An-Application.png', :alt =>
    'Screenshot of the "Register an application" tab. "Name", "Supported account types", and "Redirect URI (optional)"
    form inputs are shown.
    The description for the "Name" input is
    "The user-facing display name for this application (this can be changed later)".
    The description for the "Supported account types" input is "Who can use this application or access this API?".
    The description for the "Redirect URI (optional)" input is
    "We’ll return the authentication response to this URI after successfully authenticating the user.
    Providing this now is optional and it can be changed later,
    but a value is required for most authentication scenarios.".') %>

1. Enter a name of your choice in the **Name** field.

1. Select an option for **Supported account types**.
To make an appropriate selection, consult your security organization and the Azure documentation.
Record this choice because your OIDC Discovery Metadata URL depends on this choice.

1. Leave **Redirect URI (optional)** blank. You provide this later.

1. Click **Register**. This redirects you to the app configuration page.

1. Copy the **Application (client) ID** from the app configuration page.
This is the **Relying Party OAuth Client ID** that you will enter into the
<%= vars.operator_dash %> in a later step.

### <a id="generate-secret"></a> Generate a Relying Party OAuth Client Secret

To generate a relying party OAuth client secret:

1. Navigate to the app's configuration page.
If you just completed the previous step, you should already be on this page.
Otherwise, search for your app name in the App registrations list.

1. Select **Certificates & secrets**.

1. Select **+ New client secret**.
Provide a description and an expiration length that follows your security organization's guidelines.
Then click **Add**.

1. Copy the **Value** corresponding to the newly-created client secret.
This is the **Relying Party OAuth Client Secret** that you will enter into the
<%= vars.operator_dash %> in a later step.

### <a id="configure-urls"></a> Configure Redirect URIs

To configure redirect URIs:

1. Navigate to the app's configuration page.
If you just completed the previous step, you should already be on this page.
Otherwise, search for your application name in the App registrations list.

1. Select **Authentication**.

1. Under **Platform configuration** select **+ Add a platform**.

    <%= image_tag('../images/azure-oidc-v2-App-Authentication.png',
    :alt => 'Screenshot of the application configuration page\'s Authentication page,
     where you can configure "Platform configurations", "Supported account types", and "Advanced Settings"') %>

1. Under **Web Applications**, choose **Web**.

1. Under **Redirect URIs**, specify a URL using the following pattern:

    ```
    https://AUTH-DOMAIN.login.SYSTEM-DOMAIN/login/callback/ORIGIN-KEY
    ```
    Where:
    - `AUTH-DOMAIN` is the **Auth Domain** you entered in
    [Create or Edit Service Plans](../manage-service-plans.html#create-svc-plan).
    - `SYSTEM-DOMAIN` is the domain for system-level components you chose when
    installing the <%= vars.app_runtime_abbr %> tile.
    - `ORIGIN-KEY` is based on the **Identity Provider Name** you set in the
    <%= vars.operator_dash %> in _Set Up the OIDC Identity Provider in <%= vars.product_short %>_ below.
    Do not use spaces or uppercase letters in this value.

    <p class="note warning">
      <strong>Warning:</strong> The origin key does not change after it is assigned, even if the
      <strong>Identity Provider Name</strong> is modified.
    </p>

1. Leave **Logout URL** and **Implicit grant** empty, and click **Configure**.

    <%= image_tag('../images/azure-oidc-v2-Add-Redirect-URI.png',
    :alt => 'Screenshot of configuring a web platform\'s "Redirect URI",
    where "Logout URL" and "Implicit grant" are left empty.') %>

## <a id="locate-azure-metadata"></a> Locate the Appropriate OIDC Metadata

The Azure Active Directory v2 metadata URL takes the form of
`https://login.microsoftonline.com/{tenant}/v2.0/.well-known/openid-configuration`.

<p class="note">
   <strong>Note</strong>: Azure Active Directory v1 metadata URLs take the
   form of <code>https://login.microsoftonline.com/{tenant}/.well-known/openid-configuration</code>
</p>

To locate the OIDC metadata:

1. Consult the [Azure Documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-protocols-oidc#fetch-the-openid-connect-metadata-document)<%# The link name must be |Microsoft documentation|. %>
   to determine the appropriate `{tenant}` for your application.
   The `{tenant}` takes on one of several possible values,
   depending on the option you selected for **Supported account types** in
   [Register a New App](#register-an-app) above.

1. If your choice of **Supported account types** was **Only users from a specific Azure AD tenant**
to sign into your app, you must determine the appropriate `Tenant ID`.
Navigate to **Azure Active Directory**.
The `Tenant ID`, which is a GUID value, and `Primary domain` should be shown there.
You can use either value as the `{tenant}` in the metadata URL.


## <a id="configure-idp"></a> Set Up the OIDC Identity Provider in <%= vars.product_short %>

Follow the steps below to set up an OIDC provider for <%= vars.product_short %>:

1. Follow steps in [Add an OIDC Provider](../configure-external-id.html#config-ext-oidc),
using the option **DISCOVER OIDC CONFIGURATION**.
<p class="note">
   <strong>Note</strong>: Azure Active Directory v1 might require the option
   <strong>MANUALLY ENTER OIDC CONFIGURATION</strong>.
</p>

1. When selecting supported scopes, select at least `openid` and `profile`.
For an explanation of what each scope means, see the [Azure documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes).
<br><br>
VMware recommends using scope `profile` so that Azure includes `preferred_username` in the ID token,
as shown in the [Azure documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/id-tokens).
<p class="note">
   <strong>Note</strong>: Azure Active Directory v1 only requires scope <code>openid</code>, although other scopes can be requested.
</p>

1. Under **Advanced Settings** &gt; **Attribute Mappings (optional)** &gt; **User Attributes**,
select **user_name** as the **User Schema Attribute** and enter `preferred_username` as the
**Attribute Name**. This enables <%= vars.product_short %> to identify the authenticated user.
<p class="note">
   <strong>Note</strong>: Azure Active Directory v1 uses <code>unique_name</code> instead of <code>preferred_username</code>.
</p>

1. (Optional) Configure additional attribute mappings.

1. Click **Create Identity Provider** to save your settings.

1. (Optional) [Enable identity provider discovery](../idp-discovery.html#how-to) for the service plan.
