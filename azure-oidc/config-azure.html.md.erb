---
title: Configuring Azure Active Directory as an OIDC Identity Provider
owner: Identity Service
---

This topic describes how to integrate Azure Active Directory (Azure AD) as an identity provider for
a <%= vars.product_full %> plan, by configuring OpenID Connect (OIDC) in both
<%= vars.product_short %> and Azure AD.


## <a id="overview"></a> Overview

Azure Active Directory (Azure AD) is Microsoft’s multi-tenant cloud-based directory and identity
management service.
It is one of several identity providers you can use in a <%= vars.product_short %> service plan.

To set up the integration, follow the procedures below:

1. [Create a Service Plan in <%= vars.product_short %>](../manage-service-plans.html#create-svc-plan)
This is required to have the values for `AUTH-DOMAIN` and `ORIGIN-KEY` that are used to construct the **Redirect URI**
necessary for the Azure Relying Party configuration.
1. [Set up a Relying Party in Azure AD](#create-azure-rp)
1. [Locate the appropriate OIDC Metadata](#locate-azure-metadata)
1. [Set up the OIDC Identity Provider in <%= vars.product_short %>](#configure-idp)


## <a id="prereqs"></a> Prerequisites

Before you can set up a relying party in Azure AD, you must meet the prerequisites
listed in [Azure Active Directory OIDC Integration Guide Overview](./index.html).


## <a id="create-azure-rp"></a> Set Up a Relying Party in Azure AD

Follow the procedures below to set up a relying party in Azure AD.

Here are some helpful Azure guides that can assist with any questions.
Note that Azure functionality, user interface, and documentation may change frequently.
The text and screenshots below are included for reference only.
If there is a discrepancy or issue in the guidance below, please raise an issue on github using the link at the
   bottom of the page.

<ul>
   <li>
   [OAuth 2.0 and OpenID Connect protocols on Microsoft identity platform](https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols)
   </li>
   <li>
   [Quickstart: Register an application with the Microsoft identity platform](https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app)
   </li>
</ul>

<p class="note">
   <strong>Note</strong>: Azure Active Directory v1 and v2 will have slightly different integration instructions.
   This guide is written against v2. Notes will call out when v1 is different than v2.
</p>


### <a id="register-an-app"></a> Register a New App

To register a new app:

1. Log in to your Azure account and navigate to **Azure Active Directory** &gt; **App registrations**.

    <%= image_tag('../images/azure-oidc-v2-select-Azure-Active-Directory.png', :alt => 'Screenshot of Azure\'s main
     navigation panel. The "Azure Active Directory" button in the navigation panel is highlighted.') %>

    <%= image_tag('../images/azure-oidc-v2-Azure-Active-Directory-Menu.png', :alt => 'Screenshot of Azure Active
    Directory. The "App registrations" button in the sub-navigation panel is highlighted.') %>

1. Select **+ New registration** to create a **New application registration**. A configuration pane appears.

    <%= image_tag('../images/azure-oidc-v2-Register-An-Application.png', :alt =>
    'Screenshot of the "Register an application" tab. "Name", "Supported account types", and "Redirect URI (optional)"
    form inputs are shown.
    The description for the "Name" input is
      "The user-facing display name for this application (this can be changed later)".
    The description for the "Supported account types" input is "Who can use this application or access this API?".
    The description for the "Redirect URI (optional)" input is
      "We’ll return the authentication response to this URI after successfully authenticating the user.
      Providing this now is optional and it can be changed later,
      but a value is required for most authentication scenarios.".') %>

1. Enter a name of your choice in the **Name** field.

1. Select an option for **Supported account types**.
To make an appropriate selection, please consult your security organization and Azure documentation.
Be sure to keep track of this choice, since your Discovery Metadata URL will depend on this choice.

1. Leave the **Redirect URI (optional)** blank. You will provide this later.

1. Click **Register**. You will be redirected to the application configuration page.

1. Copy the **Application (client) ID** from the Application configuration page.
This is the **Relying Party OAuth Client Secret** that will be provided in the **Operator Dashboard** below.

### <a id="generate-secret"></a> Generate a Relying Party OAuth Client Secret

To create a client secret:

1. Navigate to the application's configuration page and select **Certificates & secrets**.
If you just completed the previous step, you should already be on this page.
Otherwise, search for your application name in the App registrations list.

    <%= image_tag('../images/azure-oidc-v2-App-Nav-To-Secrets.png',
    :alt => 'Screenshot of the application configuration page\'s navigation panel.
    The "Certificates & secrets" button in the navigation panel is highlighted.') %>

1. Select **+ New client secret**.
Provide description and expiration length as per your security organization's guidelines.
Then click **Add**.

1. Copy the **Value** corresponding to the newly-created Client secret.
This is the **Relying Party OAuth Client Secret** that will be provided in the **Operator Dashboard** below.

### <a id="configure-urls"></a> Configure Redirect URIs

1. Navigate to the application's configuration page and select **Authentication**.
   If you just completed the previous step, you should already be on this page.
   Otherwise, search for your application name in the App registrations list.

   <%= image_tag('../images/azure-oidc-v2-App-Nav-To-Authentication.png',
   :alt => 'Screenshot of the application configuration page\'s navigation panel.
   The "Authentication" button in the navigation panel is highlighted.') %>

1. Under **Platform configuration** select **+Add a platform**.

   <%= image_tag('../images/azure-oidc-v2-App-Authentication.png',
   :alt => 'Screenshot of the application configuration page\'s Authentication page,
   where you can configure "Platform configurations", "Supported account types", and "Advanced Settings"') %>

1. Under **Web Applications**, choose **Web**.

1. Under **Redirect URIs**, specify a URL using the following pattern:

    ```
    https://AUTH-DOMAIN.login.SYSTEM-DOMAIN/login/callback/ORIGIN-KEY
    ```
    Where:
    - `AUTH-DOMAIN` is the **Auth Domain** you entered in
    [Create or Edit Service Plans](../manage-service-plans.html#create-svc-plan).
    - `ORIGIN-KEY` is based on the **Identity Provider Name** you set in the
    <%= vars.operator_dash %> in **Set Up OIDC Identity Provider in SSO** as shown below.
    Do not use spaces or uppercase letters in this value.

    <p class="note warning">
      <strong>Warning:</strong> The origin key does not change after it is assigned, even if the
      <strong>Identity Provider Name</strong> is modified.
    </p>

1. Leave **Logout URL** and **Implicit grant** empty, and click **Configure**.

   <%= image_tag('../images/azure-oidc-v2-Add-Redirect-URI.png',
   :alt => 'Screenshot of configuring a web platform\'s "Redirect URI",
   where "Logout URL" and "Implicit grant" are left empty.') %>

## <a id="locate-azure-metadata"></a> Locate the appropriate OIDC Metadata

The Azure Active Directory v2 metadata URL will take the form of `https://login.microsoftonline.com/{tenant}/v2.0/.well-known/openid-configuration`

<p class="note">
   <strong>Note</strong>: Azure Active Directory v1 metadata URLs will take the form of of `https://login.microsoftonline.com/{tenant}/.well-known/openid-configuration`
</p>

1. Determine the appropriate `{tenant}` for your application

As per the [Azure Documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-protocols-oidc#fetch-the-openid-connect-metadata-document),
 the `{tenant}` will take on one of several possible values,
 depending on the choice of **Supported account types** chosen above.

1. To allow **Only users from a specific Azure AD tenant** to sign into your application, navigate to **Azure Active Directory**
The `Tenant ID` (this should be a GUID value) and `Primary domain` should be shown there.
   Either value can be used as the `{tenant}` in the metadata URL.

   <%= image_tag('../images/azure-oidc-v2-select-Azure-Active-Directory.png', :alt => 'Screenshot of Azure\'s main
    navigation panel. The "Azure Active Directory" button in the navigation panel is highlighted.') %>


## <a id="configure-idp"></a> Set Up the OIDC Identity Provider in <%= vars.product_short %>

Follow the steps below to set up an OIDC provider for <%= vars.product_short %>:

1. Follow steps in [Add an OIDC Provider](../configure-external-id.html#config-ext-oidc), using option **DISCOVER OIDC CONFIGURATION**.

<p class="note">
   <strong>Note</strong>: Azure Active Directory v1 may require options **MANUALLY ENTER OIDC CONFIGURATION**
</p>

1. When selecting supported scopes, select at least `openid` and `profile`.

See [Azure documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes)
for an explanation of what each scope means.

We recommend using scope `profile` so that Azure will include `preferred_username` in the ID token,
as shown in the [Azure documentation](https://docs.microsoft.com/en-us/azure/active-directory/develop/id-tokens).

<p class="note">
   <strong>Note</strong>: Azure Active Directory v1 only requires scope `openid`, although other scopes may be requested.
</p>

1. Under **Advanced Settings** &gt; **Attribute Mappings (optional)** &gt; **User Attributes**,
select **user_name** as the **User Schema Attribute** and enter `preferred_username` as the
**Attribute Name**. This enables <%= vars.product_short %> to identify the authenticated user.

<p class="note">
   <strong>Note</strong>: Azure Active Directory v1 uses `unique_name` instead of `preferred_username`.
</p>

1. (Optional) Configure additional attribute mappings.

1. Click **Create Identity Provider** to save your settings.

1. (Optional) [Enable identity provider discovery](../idp-discovery.html#how-to) for the service plan.
