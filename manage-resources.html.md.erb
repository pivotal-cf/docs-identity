---
title: Managing Resources
owner: Identity Service
---

This topic describes how a Space Developer defines resources required by an app bound to a <%= vars.product_full %> service instance
and how an administrator grants resource permissions.

In this topic, _resources_ are the API endpoints that users and apps need to retrieve information from a resource server.
After an administrator creates resources, they assign the resources to users and apps.
Users can then grant apps access to the resources, for example to query API endpoints on their behalf.

Because developers know what endpoints exist for their apps, they are responsible for creating resources.

## <a id='create-resources'></a> Create or Edit Resources

If an app requires access to specific resources such as API endpoints, permissions for those resources must be either bootstrapped from the app manifest or defined by the Space Developer in the <%= vars.developer_dash %>.

To bootstrap resources from the manifest, follow the instructions in the <a href="https://github.com/pivotal-cf/identity-sample-apps
"><%= vars.product_short %> Sample Applications repository</a>.</p>

To create resources in the <%= vars.developer_dash %>, do the following:

1. Log in to Apps Manager as a Space Developer.

1. Select the space where your service instance is located.

1. Under **Services**, click **Manage** next to your <%= vars.product_short %> service instance to launch the <%= vars.developer_dash %>.
    <%= image_tag('sso_dev_dashboard_resources.png', :alt => 'Screenshot of Resources section.
        The CREATE RESOURCE button is in the top right. Existing resources are listed in a table below the button.') %>
      <a href="images/sso_dev_dashboard_resources.png" target="_blank">View a larger version of this image.</a>

1. Click the **Resources** tab.

1. Click **Create Resource**.

1. Enter a **Resource Name**.

1. Create **Permissions** that the OAuth client for your app needs to access from the resource server.

    1. Enter one or more attributes or actions for each permission.

    1. Enter a **Description** for each permission.

1. Click **Create Resource**.
1. An administrator can map existing groups to the created resource. For more information, see [Create or Edit Resource Permissions Mapping](configure-external-id.html#create-resource-perm).

<p class="note"><strong>Note</strong>: Space Developers create resources within a space.
Space Developers only see the resources created in the spaces they have access to and can only assign those to the apps in those spaces.</p>

## <a id='delete-resources'></a> Delete Resources

1. Log in to Apps Manager as a Space Developer.

1. Click the **Manage** link under the <%= vars.product_short %> service instance to launch the <%= vars.developer_dash %>.
    <%= image_tag('sso_dev_dashboard_resources.png', :alt => 'Screenshot of Resources section.
        The CREATE RESOURCE button is in the top right. Existing resources are listed in a table below the button.') %>
    <a href="images/sso_dev_dashboard_resources.png" target="_blank">View a larger version of this image.</a>

1. Click the **Resources** tab.

1. Click the resource to delete.

1. Click **Delete Resource** at the bottom of the page.

1. On the popup, click **Delete Resource** to delete the resource.

<p class="note"><strong>Note</strong>: Deleting a resource removes it from the permission mappings and from the app.
You must reconfigure the updated permissions in both areas.</p>

## <a id='space-protection'></a> About Space Protection for Resources

OAuth 2.0 provides the concept of a _scope_ in order to limit the amount of access that is granted to an access token.
A scope is the intersection of a user's groups and a client's scopes.

For a user to gain access to a resource, they must meet the following conditions,
which can only be set up by plan administrators:

* The user must be assigned the resource as a group.
  For information on how to do this, see [Manage Users](manage-users.html).
* The user must access an app that has the resource assigned as a scope.

App developers can assign scopes to any app that is _not_ a service-to-service app.
But, only plan administrators can assign scopes to users.

When assigning a resource as a scope for a service-to-service app, app developers can only assign resources they have created within their own space.
Only a plan administrator can assign a scope from another space to a service-to-service app.
