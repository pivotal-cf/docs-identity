---
title: Configuring Identity Providers
owner: Identity Service
---

This topic describes how Pivotal Cloud Foundry (PCF) administrators configure a
Single Sign-On (SSO) service plan to manage user access to PCF apps.
Users can have accounts in the internal user store or in external identity providers.

## <a id='config-int-prov'></a> Manage the Internal User Store

By default, each SSO service plan comes with an internal user store, which stores user accounts natively in User Account and Authentication (UAA).

You can manage the internal user store in the following ways:

+ [Configure the Internal User Store](#config-int-store)
+ [Add Internal Users From the Command Line](#add-to-int)
+ [Define Password Policy for the Internal User Store](#passwd-policy)

### <a id='config-int-store'></a> Configure the Internal User Store

Follow the steps below to configure the internal user store:

1. Log in to the SSO Operator Dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your User Account and Authentication (UAA) administrator credentials.
Find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click **Internal User Store** and select **Edit Provider** from the dropdown.

1. (Optional) Under **Authentication Policy** select one of the following:
	- **Disable Internal Authentication**: This option prevents authentication against the internal user store. You must have at least one external identity provider configured.
	<p class="note"><strong>Note</strong>: The login page does not include the <strong>Email</strong> and <strong>Password</strong> fields if you select this option.</p>
	- **Disable User Management**: This option prevents all users, including administrators, from performing actions on internal users.
	<p class="note"><strong>Note</strong>: The login page does not include <strong>Create Account</strong> and <strong>Reset Password</strong> links if you select this option.</p>

1. Under **Password Policy Settings**, select **Use Recommended Settings**, **Use Default Settings**, or enter custom settings in the fields below.

1. Click **Save Identity Provider**.

### <a id='add-to-int'></a> Add Internal Users From the Command Line

You can use the **Internal Users** [admin pane](./manage-users.html#internal) to send invitations to users, so that they can add themselves to the internal user store.
But you cannot use the admin pane to add users directly.

To create new internal user accounts directly, supplying the user's name, email address and other info, use the UAA Command Line Interface (UAAC) as follows:

1. If you do not already have the UAAC installed, run `gem install cf-uaac` in a terminal window.

1. [Create an admin client](config-apps.html#admin) that can manage users in the Service Plan. Include the following scopes for the client:
	- `clients.admin`
	- `scim.read`
	- `scim.write`

1. Record the **App ID** and **App Secret**. These are used as your client ID and client secret.

1. Target the authentication domain of your SSO service plan. This is the URL you provided when creating a Service Plan in the SSO Operator Dashboard.
<pre class="terminal">$ uaac target <span>https</span>://YOUR-AUTH-DOMAIN.login.YOUR-SYSTEM-DOMAIN</pre>

1. Fetch the **App ID** token for the admin client created above.
<pre class="terminal">$ uaac token client get ADMIN-CLIENT-ID
Client secret:
</pre>

1. When prompted with `Client secret`, enter the **App Secret** admin client secret recorded above.

1. Add new users by providing the user's email address, username, and password.
<pre class="terminal">$ uaac user add --emails YOUR-USER<span>@</span>EMAIL.COM
User name:  YOUR-USER
Password:  ****
Verify password:  ****
user account successfully added</pre>

1. (Optional) You can also create groups and add users to them.
<pre class="terminal">$ uaac group add
Group name:  YOUR-GROUP
  meta
    version: 0
    created: 2016-02-19T23:17:17.000Z
    lastmodified: 2016-02-19T23:17:17.000Z
  schemas: urn:scim:schemas:core:1.0
  id: 8725b5fd-8da2-4cfc-89b1-c57048f089c2
  displayname: YOUR-GROUP
</pre>
To add a member to your new group, use the following command.
<pre class="terminal">$ uaac member add YOUR-GROUP YOUR-USER</pre>

### <a id='passwd-policy'></a> Define Password Policy for the Internal User Store

Administrators can define the password policy for SSO users in the internal user store.
The password policy enforces rules that restrict the kinds of passwords users can create.

1. Log in to the SSO Operator Dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials.
   You can find these credentials in your Pivotal Application Service tile in Ops Manager under the Credentials tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click **Internal User Store** and select **Edit Provider** from the dropdown.

1. Configure the following under the **Password Complexity** section:
    * **Min Length**: Specify the minimum password length.
    * **Uppercase**: Specify the minimum number of uppercase characters required in a password.
    * **Lowercase**: Specify the minimum number of lowercase characters required in a password.
    * **Special Characters**: Specify the minimum number of special characters required in a password.
    * **Numerals**: Specify the minimum number of numeric characters required in a password.

1. Configure the following under the **Lockout Policy** section:
    * **Failures Allowed**: Specify the number of failed login attempts allowed per hour before a user is locked out.
    * **Lockout Period**: Specify the number of seconds a user is locked out for after excessive failed login attempts.
    * **Password Expires**: Specify the number of months passwords are valid for before users needs to enter a new password.

1. Click **Save Identity Provider**.

## <a id='config-ext-settings'></a> Configure Service Provider SAML Settings

For each plan, the Single Sign-On service allows you to configure SAML settings when SAML is used for exchanging authentication and authorization data between the identity provider and the service provider. The SSO service provides the ability to sign authentication requests and require signed assertions from the external identity provider.

1. Log in to the SSO Operator Dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials.
You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click **Configure SAML Service Provider**.

1. Configure the following settings:
	* **Perform signed authentication requests**: The service provider signs requests sent to the external identity provider.
	* **Require signed assertions**: The service provider requires that responses from the external identity provider are signed.

1. Click **Save** to save the configurations.

1. Click **Download Metadata**.

## <a id='config-ext-prov'></a> Add an External Identity Provider

See the following sets of instructions for how to configure the SSO service to use external identity providers that support SAML 2.0, OpenID Connect (OIDC), and LDAP.

### <a id='config-saml-prov'></a> Add a SAML Provider

Follow the steps below to add an external SAML identity provider:

1. Log in to the SSO Operator Dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials. You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click **New Identity Provider**.

1. Enter an **Identity Provider Name**.

1. Select `SAML 2.0` as the Identity Provider Type.

1. Enter a **Description**. This is displayed to space developers when they select an identity provider for their app.

1. Enter the external identity provider metadata in one of the following ways:
    * Option 1: Provide the **Identity Provider Metadata URL** and click **Fetch Metadata**.
			If you select this option, your metadata is periodically fetched from the configured URL.
			This keeps the metadata up-to-date.
    * Option 2: Click **Upload Identity Provider Metadata** to upload XML metadata that you
			downloaded from your external identity provider.
			If you select this option, your metadata is not periodically updated.
			If the metadata changes, you must manually upload the file again.

1. Under **Advanced Settings**, click  **Attribute Mappings**.

1. Configure any **User Attributes** to propagate from the identity provider to the service provider. These attributes can include email addresses, first names, last names, or external groups. They are sent to apps via OpenID tokens, along with any other stored user information issued by the Single Sign-On service.
	* Select a **User Scheme Attribute** from the dropdown.
	* Enter a **SAML Attribute Name** with the corresponding attribute from the incoming SAML assertion.

1. Configure any **Custom Attributes** to propagate from the identity provider to the service provider. These attributes are sent to apps via OpenID tokens issued by the Single Sign-On service.
	* Enter a **Custom Attribute Name**.
	* Enter a **SAML Attribute Name** with the corresponding attribute from the incoming SAML assertion.

1. (Optional) Check **Persist Custom Attributes** if you want to expose custom user attributes through the `/userinfo` endpoint. Your app must also have the `user_attributes` scope assigned in order for the custom attributes to appear.

1. Click **Create Identity Provider** to save the identity provider.

<p class="note"><strong>Note:</strong> To configure the service provider SAML settings, such as the signing of authentication requests and incoming assertions, click <strong>Configure SAML Service Provider</strong> on the Identity Providers page.
For more information, see <a href="#config-ext-settings">Configure Service Provider SAML Settings</a> above.
</p>

### <a id='config-ext-oidc'></a> Add an OIDC Provider

1. Log in to the SSO Operator Dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials. You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select Manage Identity Providers from the dropdown.

1. Click **New Identity Provider**.

1. Enter an **Identity Provider Name**.

1. Enter a **Description**. This is displayed to space developers when they select an identity provider for their app.

1. Select `OpenID Connect` as the **Identity Provider Type**.

1. Enter the external OpenID Connect (OIDC) identity provider metadata in one of the following ways:
  - Option 1: Select the **Enable Discovery** checkbox, provide the **Discovery Endpoint URL**, **Relying Party OAuth Client ID**, and **Relying Party OAuth Client Secret** and click **Fetch Scopes**.
  - Option 2: Clear the **Enable Discovery** checkbox and provide the **Authorization Endpoint URL**, **Token Endpoint URL**, **Token Key** (URL), **Relying Party OAuth Client ID**, and **Relying Party OAuth Client Secret**. You may also optionally configure the **Issuer**, **User Info Endpoint URL**, or **Response Type** if required for your OIDC Identity Provider integration.

1. Select the applicable **Scopes** for the OIDC identity provider.

1. Configure any **User Attributes** to propagate from the identity provider to the service provider. These attributes can include email addresses, first or last names, or external groups. They are sent to apps via OpenID tokens, along with any other stored user information issued by the Single Sign-On service.
  - Select a **User Scheme Attribute** from the dropdown.
  - Enter an **ID Token Attribute Name** with the corresponding attribute from the incoming OIDC ID token.

1. Configure any **Custom Attributes** to propagate from the identity provider to the service provider. These attributes are sent to apps via OpenID tokens issued by the Single Sign-On service.
  - Enter a **Custom Attribute Name**.
  - Enter an **ID Token Attribute Name** with the corresponding attribute from the incoming OIDC ID token.

1. (Optional) Check **Persist Custom Attributes** if you want to expose custom user attributes through the `/userinfo` endpoint.  Your app must also have the `user_attributes` scope assigned in order for the custom attributes to appear.

1. Click **Create Identity Provider** to save the identity provider.

### <a id='config-ext-ldap'></a> Add an LDAP Identity Provider

When integrating with an external identity provider for LDAP, authentication becomes chained. An authentication attempt with a user's credentials is first attempted against the internal user store before the external LDAP identity provider. To avoid username collision, do not bootstrap or create users in the UAA directly. You can only have one LDAP external identity provider per service plan.

<p class="note warning">
<strong>Warning:</strong> Pivotal recommends against reusing LDAP service accounts across environments.
LDAP service accounts should not be subject to manual lockouts, such as lockouts that result from users using the same account.
LDAP service accounts should not be subject to automated deletions as disruption to these service accounts could prevent user logins.
</p>

1. Log in to the SSO Operator Dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA administrator credentials. You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click **New Identity Provider**.

1. Enter an **Identity Provider Name**.

1. Enter a **Description**. This is displayed to space developers when they select an identity provider for their app.

1. Select `LDAP` as the **Identity Provider Type**. You may only have one LDAP provider per Service Plan.

1. Enter the external LDAP identity provider configurations:
  1. Enter the **Hostname** and **Port**.
  1. Select the applicable **Security protocol**.
  1. Select the applicable **Referral**.
  1. Enter the **User DN** and **Bind Password** for your LDAP service account.
  1. Under the **Users** section, enter the **Search Base**.
  1. Under the **Users** section, you may also enter in **Search Filter** (Optional).
  1. Under the **Users** section, you may select **Just in Time Provisioning**. If this option is enabled, users will be created at login time. If this option is not enabled, users must be created prior to being able to login.
  1. Under the **Groups** section, you may enter in enter the **Search Base** (optional) and **Search Filter** (optional) in order to associate LDAP groups with your user. If you want to use the `memberOf` attribute on user objects, you can enter in the value `memberOf` as the Search Base instead of an LDAP path for a group OU, and the Search Filter value will be ignored.

1. Configure any **User Attributes** to propagate from the identity provider to the service provider.
   The configurable attributes are sent to apps via OpenID tokens,
   along with any other stored user information issued by the Single Sign-On service.
  1. Select a **User Scheme Attribute** from the dropdown.
  1. Enter an **LDAP Attribute Name** with the corresponding attribute from LDAP.

	The only configurable attributes for LDAP are `given_name`, `family_name`, and `phone_number`.
        Configuring `email` and `external_groups` has no effect on your LDAP integration.

1. Configure any **Custom Attributes** to propagate from the identity provider to the service provider. These attributes are sent to apps via OpenID tokens issued by the Single Sign-On service.
  - Enter a **Custom Attribute Name**.
  - Enter an **LDAP Attribute Name** with the corresponding attribute from LDAP.

1. (Optional) Check **Persist Custom Attributes** if you want to expose custom user attributes through the `/userinfo` endpoint.  Your app must also have the `user_attributes` scope assigned in order for the custom attributes to appear.

1. Click **Create Identity Provider** to save the identity provider.

1. (Optional) Transfer group memberships and roles from an existing LDAP groups to the SSO service as follows:
  1. To map existing LDAP user group memberships to SSO resources,
     create a permissions mapping for your LDAP identity provider as described in
     [Create or Edit Resource Permissions Mapping](#create-resource-perm) below.
  1. To propagate the existing LDAP user group memberships into the `roles` claim of the OpenID tokens
     issued by the Single Sign-On service,
     follow the procedure in [Configure Group Allowlist for an External Identity Provider](#config-whitelist) below.

## <a id='delete-idp'></a> Delete an External Identity Provider

1. Log in to the SSO Operator Dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials. You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click on the name of your external identity provider.

1. Click **Delete** at the bottom of the page.

1. In the pop-up that appears, click **Delete Identity Provider** to confirm that you want to delete the identity provider, along with all of its configurations.

<p class="note warning"><strong>Note:</strong> Deleting an external identity provider deletes all of its configurations, preventing users from authenticating through the external identity provider. This action cannot be undone.</p>

## <a id='config-whitelist'></a> Configure Group Allowlist for an External Identity Provider

An admin can include groups from an external identity provider in a group allowlist. The list of groups in the allowlist propagates in the ID token when a user authenticates through an external identity provider.

An app can retrieve from the ID token the list of external groups that the user belongs to. An admin can use these groups to assign permissions by group rather than by individual users.

For information about how to create resource permission mappings,
see <a href="#create-resource-perm">Create or Edit Resource Permissions Mapping</a> below.

<p class="note"><strong>Note:</strong> For an app to retrieve an ID token or a <code>/userinfo</code> response containing external groups, the app must request the <code>roles</code> claim and the group allowlist must include the external groups.</p>

1. Log in to the SSO Operator Dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials.
   You can find these credentials in your PAS tile in Ops Manager under the Credentials tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click on the name of your external identity provider and select **Group Whitelist** from the dropdown.

1. Add a group name from your external identity provider. You can use a regex to add group names. For example, you can use `*` to refer to all groups.

1. Click **Save Group Whitelist**.

## <a id='create-resource-perm'></a> Create or Edit Resource Permissions Mapping

After a space developer defines resources required by an app,
an administrator can map existing groups to those resources.
For information about how the space developer defines resources,
see [Create or Edit Resources](./manage-resources.html#create-resources).

After resource permissions mappings are configured and a user authenticates,
the user's group memberships is mapped to scopes in the resulting token.

1. Log in to the SSO Operator Dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials.
You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click the name of the external identity provider you want to define permissions for and select **Resource Permissions** from the dropdown.

1. Click **New Permissions Mapping**.

1. Enter a **Group Name**.
	- The **Group Name** values need to be fully qualified LDAP paths, following the format `cn=XXX-group,ou=users,o=YYY,dc=ZZZ,dc=com`.

1. Click **Select Permissions** to choose the permissions that users in the group should have access to.

1. Click **Save Permissions Mapping**.

<p class="note"><strong>Note:</strong> Groups with unsupported characters in Permission Mappings are not editable.</p>

<p class="note"><strong>Note:</strong> If you want to automate the above procedure, creating or editing resource permissions,
you can use the UAA API. For information about using <code>uaac group mappings</code> and <code>uaac group map</code>,
see <a href="https://docs.cloudfoundry.org/uaa/uaa-user-management.html#external-group">
Grant Admin Permissions to an External Group (SAML or LDAP)</a> in the Cloud Foundry documentation.
To do this automation, you need an identity zone admin client; for information,
see <a href="./configure-id-providers-api.html#creating">Create a UAA Identity Zone Admin Client</a>.</p>


## <a id='delete-resource-perm'></a> Delete Resource Permissions Mapping

1. Log in to the SSO Operator Dashboard at `https://p-identity.YOUR-SYSTEM-DOMAIN` using your UAA admin credentials.
You can find these credentials in your Pivotal Application Service tile in Ops Manager under the **Credentials** tab.

1. Click the plan name and select **Manage Identity Providers** from the dropdown.

1. Click on the name of the external identity provider you want to delete permissions for and select **Resource Permissions** from the dropdown.

1. Click the group name of the resource permission you want to delete.

1. Click **Delete** at the bottom of the page.

1. On the pop-up, click **Delete Permissions Mapping** to delete the resource.

<p class="note"><strong>Note</strong>: Groups with unsupported characters in Permission Mappings are not editable.</p>

<p class="note"><strong>Note:</strong> If you want to automate the above procedure,
deleting resource permissions mappings, you can use the UAA API to un-map a group mapping.
See the <a href="http://docs.cloudfoundry.org/api/uaa/index.html#unmap">Cloud Foundry documentation</a> for more information.
To do this automation, you need an identity zone admin client. For more information,
see <a href="./configure-id-providers-api.html#creating">Create a UAA Identity Zone Admin Client</a>.</p>


## <a id='testing-identity-provider-configurations'></a> Testing Identity Provider Configurations

To test your identity provider configurations, you can deploy the [Single Sign-On Service Sample Applications](https://github.com/pivotal-cf/identity-sample-apps) to validate the effects of the instructions given in this guide.
